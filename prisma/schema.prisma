// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  name         String
  email        String         @unique
  createdAt    DateTime       @default(now())
  isAdmin      Boolean
  password     String
  birthday     DateTime?
  gender       String?
  work         String?
  FixedGain    FixedGain[]
  FixedExpense FixedExpense[]
  Category     Category[]
  Month        Month[]

  @@map("users")
}

model FixedGain {
  id         String   @id @default(uuid())
  name       String
  since      DateTime
  dayOfMonth Int
  value      Float
  User       User     @relation(fields: [userId], references: [id])
  Category   Category @relation(fields: [categoryId], references: [id])
  userId     String
  categoryId String

  @@map("fixed_gains")
}

model FixedExpense {
  id         String   @id @default(uuid())
  name       String
  value      Float
  since      DateTime
  dayOfMonth Int
  Category   Category @relation(fields: [categoryId], references: [id])
  User       User     @relation(fields: [userId], references: [id])
  userId     String
  categoryId String

  @@map("fixed_expenses")
}

model Category {
  name         String
  id           String         @id @default(uuid())
  User         User           @relation(fields: [userId], references: [id])
  createdAt    DateTime       @default(now())
  userId       String
  FixedGain    FixedGain[]
  FixedExpense FixedExpense[]
  Gain         Gain[]
  Expense      Expense[]

  @@map("categories")
}

model Month {
  id      String    @id @default(uuid())
  user    User      @relation(fields: [userId], references: [id])
  at      DateTime
  userId  String
  Gain    Gain[]
  Expense Expense[]

  @@unique([userId, at])
  @@map("months")
}

model Gain {
  name       String
  id         String   @id @default(uuid())
  value      Float
  dayOfMonth Int
  Category   Category @relation(fields: [categoryId], references: [id])
  Month      Month    @relation(fields: [monthId], references: [id])
  monthId    String
  categoryId String

  @@map("gains")
}

model Expense {
  name       String
  id         String   @id @default(uuid())
  value      Float
  dayOfMonth Int
  Category   Category @relation(fields: [categoryId], references: [id])
  Month      Month    @relation(fields: [monthId], references: [id])
  monthId    String
  categoryId String

  @@map("expenses")
}
